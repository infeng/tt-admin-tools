import { initAction } from 'tt-admin-tools/lib/model/initAction';
import { initApi, ApiConfig } from 'tt-admin-tools/lib/model/initApi';
import { handleActions } from 'redux-actions';

export let modelName = '<%= modelName %>';

// simple actions

export let keys = {
};

const simpleActions = initAction<typeof keys>(keys, modelName);

export const actionNames = simpleActions.actionNames;
export const actions = simpleActions.actions;

// apis

export let apis = {
  <%= apiActionName %>: '<%= apiActionName %>',
};

let apiConfigs: ApiConfig[] = [{
  path: '<%= apiPath %>',
  actionName: apis.<%= apiActionName %>,
}];

const api = initApi<typeof apis>('/api', apiConfigs, modelName);

export const apiActionNames = api.apiActionNames;
export const apiActions = api.apiActions;
export const sagas = api.sagas;

// reducers

export interface <%= componentName %>State {
  loading: boolean;
}

export const reducer = handleActions<<%= componentName %>State, any>({
  [apiActionNames.<%= apiActionName %>.request](state, action) {
    return {
      ...state,
      loading: true,
    };
  },
  [apiActionNames.<%= apiActionName %>.success](state, action) {
    return {
      ...state,
      loading: false,
    };
  },
  [apiActionNames.<%= apiActionName %>.error](state, action) {
    return {
      ...state,
      loading: false,
    };
  },
}, {
  loading: false,
});
