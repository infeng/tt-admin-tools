import { initAction } from 'tt-admin-tools/lib/model/initAction';
import { initApi, ApiConfig } from 'tt-admin-tools/lib/model/initApi';
import { handleActions } from 'redux-actions';
import { makeListHandleActions, ListState } from 'tt-admin-tools/lib/model/listReducers';

export let modelName = '<%= modelName %>';

// simple actions

export let keys = {
};

const simpleActions = initAction<typeof keys>(keys, modelName);

export const actionNames = simpleActions.actionNames;
export const actions = simpleActions.actions;

// apis

export let apis = {
  <%= apiActionName %>: '<%= apiActionName %>',
};

let apiConfigs: ApiConfig[] = [{
  path: '<%= apiPath %>',
  actionName: apis.<%= apiActionName %>,
}];

const api = initApi<typeof apis>('/api', apiConfigs, modelName);

export const apiActionNames = api.apiActionNames;
export const apiActions = api.apiActions;
export const sagas = api.sagas;

// reducers

const listHandle = makeListHandleActions(apiActionNames.<%= apiActionName %>);

export interface <%= componentName %>State extends ListState<any> {
}

export const reducer = handleActions<<%= componentName %>State, any>({
  ...listHandle.handleActions,
}, {
  ...listHandle.initializeState,
});
